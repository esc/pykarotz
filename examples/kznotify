#!/usr/bin/env python
# -*- coding: utf-8 -*-

""" Command-line notification using pykarotz.

Description
-----------

This is an example of using the pykarotz library to send messages from the
command line to your rabbit. It will simply take all the command line arguments
and send them to Karotz. The author uses this via the UNIX tools 'cron' or 'at'
to send himself reminders. One important techniques here is that I need to keep
the connection alive (i.e. not send the 'stop' command) until the text has been
spoken. For this I use the heuristic, that each word will take 0.5 seconds and
just keep the connection alive for number_of_words*0.5 seconds. Testing shows
this is usually more than enough. Maybe at some point I will implement
callbacks so that I can disconnect when the whole text has been spoken.

Examples
--------

# Basic testing
$ pwd
/home/esc/git-working/pykarotz
$ PYTHONPATH=. examples/kznotify hallo, hallo, dies ist ein Test

# Using UNIX 'at' to notify in 45 minutes
# (Use PYTHONPATH and explicit path to make sure cron finds
# both the executable and the pykarotz library)
$ echo "PYTHONPATH=$HOME/git-working/pykarotz \
        $HOME/git-working/pykarotz/examples/kznotify \
        deine WÃ¤sche ist fertig" | at now + 1 min
"""

from __future__ import division
import sys
import time
import karotz as kz

k = kz.Karotz()
message = " ".join(sys.argv[1:])
k.say(message, lang=kz.GERMAN)
# wait for the message to complete
time.sleep(len(sys.argv)/2)
k.stop()
